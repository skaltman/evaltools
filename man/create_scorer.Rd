% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scorer-factory.R
\name{create_scorer}
\alias{create_scorer}
\title{Create a scorer function for tool-based evaluations}
\usage{
create_scorer(
  scorer_chat = ellmer::chat_anthropic(model = "claude-sonnet-4-5-20250929"),
  tool_names = "create_plot",
  prompt_field = "prompt",
  target_field = "target",
  instructions = default_judge_instructions(),
  grade_levels = c("I", "C")
)
}
\arguments{
\item{scorer_chat}{An ellmer Chat object to use for judging. Default is
Claude Sonnet 4.5.}

\item{tool_names}{Character vector of tool names to check for successful calls.
The sample is only graded if one of these tools was called successfully.}

\item{prompt_field}{Character string naming the field in input that contains
the task prompt. Default is "prompt".}

\item{target_field}{Character string naming the field in samples that contains
the target observation. Default is "target".}

\item{instructions}{Character string with grading instructions for the judge.
Default uses standard binary Correct/Incorrect instructions.}

\item{grade_levels}{Character vector of valid grade levels. Default is
c("I", "C") for Incorrect/Correct. The levels should be ordered from
worst to best.}
}
\value{
A function with signature \code{function(samples, ..., scorer_chat)}
that can be used as a scorer in vitals::Task. Returns a list with:
\describe{
\item{score}{Factor vector of scores}
\item{scorer_chat}{List of Chat objects used for grading}
\item{scorer_metadata}{List containing prompts, responses, and metadata}
}
}
\description{
Creates a scorer function that checks for successful tool calls and uses
an LLM judge to grade responses. The scorer follows the pattern expected
by vitals::Task.
}
\examples{
\dontrun{
# Create a scorer that checks for "create_plot" tool
scorer <- create_scorer(
  tool_names = "create_plot",
  prompt_field = "prompt",
  target_field = "target"
)

# Use with custom judge
scorer <- create_scorer(
  scorer_chat = ellmer::chat_openai(model = "gpt-4"),
  tool_names = c("create_plot", "make_plot"),
  instructions = custom_instructions()
)
}
}
