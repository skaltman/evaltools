% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run-eval.R
\name{create_task}
\alias{create_task}
\title{Create an evaluation task}
\usage{
create_task(
  samples_dir,
  system_prompt = NULL,
  tools_dir = "tools",
  tool_names = NULL,
  scorer_chat = ellmer::chat_anthropic(model = "claude-sonnet-4-5-20250929"),
  scorer_instructions = default_judge_instructions(),
  grade_levels = c("I", "C"),
  epochs = 1,
  name = "eval",
  dir = "logs",
  ...
)
}
\arguments{
\item{samples_dir}{Path to directory with YAML sample files.}

\item{system_prompt}{System prompt to prepend to all samples. Default NULL.}

\item{tools_dir}{Path to directory with tool R files to source. Default "tools".
Set to NULL if tools are already loaded (e.g., from a package).}

\item{tool_names}{Tool names to check in scorer. Default NULL auto-detects from
YAML files.}

\item{scorer_chat}{Chat object for LLM judge. Default uses Claude Sonnet 4.5.}

\item{scorer_instructions}{Custom instructions for the judge. Default uses
Correct/Incorrect grading.}

\item{grade_levels}{Valid grades. Default \code{c("I", "C")}.}

\item{epochs}{Number of evaluation runs. Default 1.}

\item{name}{Task name. Default "eval".}

\item{dir}{Logging directory. Default "logs".}

\item{...}{Additional arguments for \code{create_solver()} (e.g., prompt_field,
setup_field, sleep_time).}

\item{view}{Open interactive viewer after running? Default FALSE. If you get
port conflicts, use \code{vitals::vitals_view(port = custom_port)} instead.}
}
\value{
A Task object. Call \code{task$eval(solver_chat)} to run it.
}
\description{
Load YAML samples and create a task with solver and scorer. Usually you'll
use \code{run_eval()} instead, which calls this function and runs the
evaluation automatically.
}
\examples{
\dontrun{
# Tools automatically sourced from tools/ directory
task <- create_task(
  samples_dir = "samples/",
  system_prompt = "You are a careful analyst."
)

# Disable auto-sourcing if tools are in a package
library(mytools)
task <- create_task(
  samples_dir = "samples/",
  tools_dir = NULL
)

# Run evaluation
task$eval(solver_chat = ellmer::chat_anthropic(...))

# View results
task$results
task$accuracy()
}
}
